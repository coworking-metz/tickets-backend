import process from 'node:process'
import {button, renderHtmlLayout, alert, spacer, theme} from './layout.js'
import got from 'got'
import {notifyOnSignal} from '../services/home-assistant.js'

const WORDPRESS_BASE_URL = process.env.WORDPRESS_BASE_URL || 'https://www.coworking-metz.fr'
const GEMINI_API_KEY = process.env.GEMINI_API_KEY || ''

const GEMINI_PROMPT = `
Tu fais parti de l'√©quipe qui g√®re un espace de bureaux partag√©s (appel√© Le Poulailler) o√π les usagers peuvent venir
comme ils le souhaitent √† condition d'avoir un solde suffisant.
Le solde est automatiquement calcul√© en fonction du nombre de tickets restants ou d'un abonnement actif.
Les tickets et abonnements peuvent √™tre achet√©s sur la boutique en ligne.
Un usager vient d'arriver dans l'espace de Coworking
et est actuellement sur place mais son solde est nul ou n√©gatif.
L'usager peut continuer √† profiter du lieu comme il veut.
Tu lui r√©diges un mail lui indiquant de se r√©gulariser.
Tu prends un air d√©contract√©, agr√©able, gentil et sympa pour le rappeler √† l'ordre.
Sois cr√©atif, original, familier et tr√®s concis. Un paragraphe ne peut pas contenir plus de 2 phrases.
Tu mettras une information en gras pour attirer l'attention √† l'aide des balises HTML <strong> et cette information ne doit pas contenir "STORE_BUTTON".
Tu feras varier l'objet et le contenu selon le nombre de visites sans r√©gularisation et selon le jour de l'ann√©e.
Il est d√©j√† venu DEPLETED_COUNT fois sans se r√©gulariser : entre 0 et 3, c'est acceptable, au-d√©l√†, il faut s√©vir.
Le contenu et l'objet doit √™tre jovial, enjou√© et ne pas contenir de salutations ni d'√©moji.
Le contenu doit faire preuve d'empathie.
Tu peux mettre jusqu'√† 1 √©moji dans le contenu. Il ne peut pas √™tre suivi de ponctuation.
Tu utiliseras l'√©criture inclusive.
Tu n'indiqueras pas de nous contacter en cas de questions.
Le r√©sultat doit √™tre au format JSON avec 2 propri√©t√©s "subject" et "body".
Tu ne peux pas modifier ni supprimer le texte "STORE_BUTTON" qui indique un bouton venant vers la boutique
ainsi que "MEMBER_NAME" qui indique l'usager.
Tu signes la fin du message avec "L'√©quipe du Poulailler".
Voici le mod√®le de base que tu modifies √† ton aise :
`

const BASE_SUBJECT = 'Solde de ticket √©puis√©'
const BASE_TEMPLATE = `Bonjour MEMBER_NAME,

Nous vous remercions de votre venue au Poulailler.
Cependant, <strong>votre solde de tickets est actuellement √©puis√©</strong>.
Pour continuer √† profiter du lieu, nous vous invitons √† vous rendre sur la boutique afin d'ajuster votre situation :
STORE_BUTTON
Merci pour votre compr√©hension et √† tr√®s bient√¥t !

L'√©quipe du Poulailler`

async function render(user) {
  let subject = BASE_SUBJECT
  let body = BASE_TEMPLATE

  if (GEMINI_API_KEY) {
    const prompt = GEMINI_PROMPT
      .replace('DEPLETED_COUNT', Math.abs(user.profile.balance))

    const geminiResult = await got.post('https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent', {
      searchParams: {
        key: GEMINI_API_KEY
      },
      json: {
        contents: [
          {
            parts: [
              {
                text: `${prompt} ${BASE_TEMPLATE}`
              }
            ]
          }
        ],
        generationConfig: {
          response_mime_type: 'application/json'
        }
      }
    }).json().catch(error => {
      // It's fine but we should notify the tech team
      console.error(error)
      notifyOnSignal(`Impossible de r√©diger le mail de solde √©puis√© avec Gemini :\n${error.message}`)
        .catch(notifyError => {
          // Don't throw an error if the notification failed
          console.error('Unable to notify about plus-de-tickets error', notifyError)
        })
    })

    const [firstCandidate] = geminiResult.candidates
    const [firstContentPart] = firstCandidate.content.parts
    const generatedText = JSON.parse(firstContentPart.text)
    subject = generatedText.subject
    body = generatedText.body
  }

  const enhancedSubject = subject
    .replace('MEMBER_NAME', user.firstName)

  const enhancedBody = body
    .replaceAll('\n', '<br />')
    .replace('MEMBER_NAME', user.firstName)
    .replace(/([<br />]*STORE_BUTTON[<br />]*)/, button('CONSULTER LA BOUTIQUE', new URL('/la-boutique/', WORDPRESS_BASE_URL).toString()))

  return {
    subject: enhancedSubject,
    html: renderHtmlLayout(`${enhancedBody}${alert(`üôã‚Äç‚ôÄÔ∏è Si vous rencontrez le moindre probl√®me, contactez-nous √† <a style="font-weight: medium; text-decoration: underline; color: ${theme.meatBrown}" href="mailto:contact@coworking-metz.fr">contact@coworking-metz.fr</a> ou r√©pondez √† cet e-mail. Nous sommes l√† pour vous aider.`, spacer(24), '')}`)
  }
}

export default render
